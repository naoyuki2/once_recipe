// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
  theme = "forest"
  output = "scheme.png"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Bookmark Bookmark[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Recipe {
  Id Int      @id @default(autoincrement())
  foodImageUrl           String
  recipeTitle            String
  recipeDescription  String
  recipeIndication    String
  recipeCost            String
  recipeMaterial      Json
  recipeUrl            String
  Archive     Archive[]
  Bookmark    Bookmark[]
}

model Archive {
  Id        Int      @id @default(autoincrement())
  RecipeId  Int
  CreatedAt DateTime @default(now())
  Recipe    Recipe   @relation(fields: [RecipeId], references: [Id],onDelete: Cascade)
}

model Bookmark {
  Id        Int      @id @default(autoincrement())
  RecipeId  Int
  UserId    String
  CreatedAt DateTime @default(now())
  Recipe    Recipe   @relation(fields: [RecipeId], references: [Id], onDelete: Cascade)
  user         User     @relation(fields: [UserId], references: [id], onDelete: Cascade)
}
